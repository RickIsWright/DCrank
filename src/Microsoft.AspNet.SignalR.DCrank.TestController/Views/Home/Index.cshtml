@{
    ViewBag.Title = "Dashboard";
}

<html ng-app="angularModule" ng-controller="SignalRAngularCtrl">
<head>
    <title></title>
    <script src="~/Angular/angular.min.js"></script>
    <script src="~/Angular/AngularController.js"></script>
    <link rel="stylesheet" type="text/css" href="~/Content/HudStyle.css">
</head>
<body class="container">
    <h1>Hud</h1>
    <div id="headingContainer">
        <h3 id="title">Target Application</h3>
        <div id="toggle" class="onoffswitch">
            <input type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="myonoffswitch" data-ng-model="autoTesting">
            <label class="onoffswitch-label" for="myonoffswitch">
                <span class="onoffswitch-inner"></span>
                <span class="onoffswitch-switch"></span>
            </label>
        </div>
    </div>
    <div class="staticInput">
        <div>Target URL<input class="staticTextBox" type="url" data-ng-model="targetAddress" /></div>
        <div>Messages Per Second Per Connection<input class="staticTextBox" type="number" data-ng-model="messagesPerSecond" /></div>
        <div>Mesage Size (Bytes)<input class="staticTextBox" type="number" data-ng-model="messageSize" /></div>
        <div data-ng-show="autoTesting">Number of Connections<input class="staticTextBox" type="number" data-ng-model="numberOfConnections" /></div>
        <div><input id="startTest" class="btn btn-default btn-lg" type="submit" data-ng-click="sendTestInfo()" value="Start Test" /></div>
    </div>

    <h3>Navigation</h3>
    <div class="hud" data-ng-click="backOut()">
        @* Permanent View *@
        <div class="dashboard">
            <h3 class="left">{{currentView}}</h3>
            <h3 class="right">Connections: TBA</h3>
        </div>

        @* View 1: All Agents View *@
        <div id="{{agent.state}}" class="col-md-4" data-ng-repeat="agent in agents" data-ng-click="toView2()" data-ng-show="displayView1 && agent.view1">
            <div class="agentNumber">{{agent.number}}</div>
            <div class="numberOfWorkers">{{agent.numberOfWorkers}}</div>
            <div class="machineName">{{agent.machineName}}</div>
        </div>

        @* View 2: All workers in 1 Agent *@
        <div class="workerContainer" data-ng-repeat="agent in agents">
            @* Displays the workers for a particular agent *@
            <div class="col-md-4" id="{{worker.state}}" data-ng-click="toView3()" data-ng-repeat="worker in agent.workers" data-ng-show="agent.view2">
                <div class="workerNumber">{{worker.id}}</div>
                <div class="removeButtonContainer" onclick="kill()" data-ng-click="killWorker(agent.id)">
                    <input type="checkbox" class="removeCheckbox">
                    <div class="glyphicon glyphicon-remove"></div>
                </div>
                <div class="numberOfConnections">TBA</div>
            </div>

            @* Start worker button *@
            <div class="col-md-4" id="addAgentButton" data-ng-click="startWorker()" data-ng-show="agent.view2 && !autoTesting">
                <div class="glyphicon-plus"></div>
            </div>
        </div>

        @* View 3: All logging for 1 worker *@
        <div class="loggingContainer" data-ng-repeat="agent in agents">
            <div class="col-md-6" id="logging" onclick="event.stopPropagation()" data-ng-repeat="worker in agent.workers" data-ng-show="worker.view3">
                <div class="workerId">{{worker.id}}</div>
                <div class="currentConnections">TBA</div>
                <div class="log">
                    <ul data-ng-repeat="workerLogging in worker.output track by $index">{{workerLogging}}</ul>
                </div>
            </div>
        </div>
    </div>

    <h3>Output Area</h3>

    <div class="jumbotron" style="max-height:400px; overflow:auto; min-width: 800px;">
        <ul data-ng-repeat="messages in uiGeneralDisplay track by $index">{{messages}}</ul>
    </div>

    @section scripts
    {
        <!-- Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.1.0.min.js"></script>
        <!-- Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>

        <script>
            var controller = $.connection.controllerHub;

            // Established a group for the UI so that it can be identified by the hub
            $.connection.hub.qs = { UI: 1 };
            $.connection.hub.start().done(function () {
            });

            function kill() {
                event.stopPropagation();
                var workerObject = event.target.parentNode.parentNode;
                workerObject.classList.add("dyingWorker");
            }
        </script>
    }
</body>
</html>
@{
    ViewBag.Title = "Dashboard";
}
<html ng-app="angularModule" ng-controller="SignalRAngularCtrl">
<head>
    <title></title>
    <script src="~/Angular/angular.min.js"></script>
    <script src="~/Angular/AngularController.js"></script>
</head>
<body>
    <h1>Hud</h1>
    <h3>Remote Control</h3>
    <div class="jumbotron" style="max-height:400px; overflow:auto; min-width:800px;">
        <table id="uiView" style="width:100%; font-size:1em">
            <thead>
                <tr>
                    <th width="20%">Agent Id</th>
                    <th width="20%">Number of Workers</th>
                    <th width="20%">Start Workers</th>
                    <th width="40%">Current Workers</th>
                </tr>
            </thead>
            <tbody>
                <tr data-ng-repeat="agent in agents">
                    <th>{{agent.id}}</th>
                    <th>{{agent.numberOfWorkers}}</th>
                    <th>
                        <form>
                            Number of Workers to Start: <input type="text" maxlength="5" size="5"> <input class="button" type="submit" value="Start Workers" data-ng-click="startWorkers()">
                        </form>
                    </th>
                    <th>
                        <div data-ng-repeat="worker in agent.workers">
                            <div style="width:40%;">{{worker.id}}</div>
                            <button class="button" style="width:40%;" data-ng-click="pingWorker()">Ping</button>
                        </div>
                    </th>
                </tr>
            </tbody>
        </table>
    </div>

    <button class="button" id="pingAgent">Ping All Agents</button>

    <div data-ng-repeat="agent in agents">
        <div data-ng-repeat="worker in agent.workers">
            <div>{{worker.output}}</div>
        </div>
    </div>

    <h3>Output Area</h3>

    <div class="jumbotron" style="max-height:400px; overflow:auto;min-width: 800px;">
        <ul id="uiOutput"></ul>
    </div>

    @section scripts
    {
        <!--Reference the SignalR library. -->
        <script src="~/Scripts/jquery.signalR-2.1.0.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="~/signalr/hubs"></script>

        <script>
            var controller = $.connection.controllerHub;

            // Activates when an agent connects and updates the UI
            controller.client.agentConnected = function (agentId, workerId) {
                $('#uiOutput').prepend('<li> ' + agentId + ' has connected to the hub </li>');
            };

            // Activates when a worker connects and updates the UI
            controller.client.workerConnected = function (agentId, workerId) {
                $('#uiOutput').prepend('<li> ' + workerId + ' has connected to agent: ' + agentId + '</li>');
            };

            // Activates when a pong response is received from the agent
            controller.client.agentPongResponse = function (agentId, value) {
                $('#uiOutput').prepend('<li> ' + agentId + ' has responded to the ping with ' + value + '</li>');
            };

            // Activates when a pong response is received from the worker
            controller.client.workerPongResponse = function (agentId, workerId, value) {
                $('#uiOutput').prepend('<li> Worker with id: ' + workerId + ' under' +
                    ' agent:' + agentId + ' has responded to the ping with ' + value + '</li>');
            };

            // Established a group for the UI so that it can be identified by the hub
            $.connection.hub.qs = { UI: 1 };
            $.connection.hub.start().done(function () {
                $('#pingAgent').click(function () {
                    controller.server.pingAgent(5);
                });
            });

            function PingWorker() {
                if (_processId == "N/A") {
                    $('#uiOutput').prepend('<li> ' + agentId + ' has no worker !*#$%^& </li>');
                }
                else {
                    controller.server.pingWorker(_processId, 7)
                }
            };

            function StartWorker() {
                controller.server.startWorker(_agentId);
            };
        </script>

    }
</body>
</html>
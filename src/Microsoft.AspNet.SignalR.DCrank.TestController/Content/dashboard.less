/*** Constants ***/
/** Colors **/
@colorWhite: #fff;
@colorBlack: #000;
@colorGray: #b4b6b8;
@colorLightGray: #e6e7e7;
@colorBlue: #2e80ab;
@colorLightBlue: #b3ebfb;

/** General **/
@backgroundColor: @colorWhite;
@textColor: @colorBlack;
@toolTipBackgroundColor: @colorBlack;
@toolTipTextColor: @colorWhite;
@toolTipBorderColor: @colorGray;

/** Blades **/
@bladeTitleBackgroundColor: @colorBlack;
@bladeTitleTextColor: @colorGray;
@bladeBodybackgroundColorLight: @colorWhite;
@bladeBodybackgroundColorDark: @colorLightGray;
@bladeHeight: 700px;
@bladeTitleHeight: 25px;
@bladeHeaderHeight: 100px;
@bladePaddingSize: 15px;
@bladeBorderSize: 1px;

/** Tiles **/
@tileGutterSize: 4px;

/** Consoles **/
@consoleTitleBackgroundColor: @colorBlack;
@consoleTitleTextColor: @colorGray;
@consoleBodyBackgroundColor: @colorBlack;
@consoleBodyTextColor: @colorGray;
@consoleHeight: 200px;
@consoleTitleHeight: 25px;

/** Grids **/
@gridBackgroundColor: @colorWhite;
@gridDividerColor: @colorGray;
@gridSelectedColor: @colorLightBlue;

/*** Mixins ***/
/* Transitions */
.Transition {
    -webkit-transition: all .2s linear;
    -moz-transition: all .2s linear;
    -o-transition: all .2s linear;
    transition: all .2s linear;
}

/*** Classes ***/
/** General **/
body {
    background-color: @backgroundColor;
    color: @textColor;
}

.tool-tip:hover:after {
    position: absolute;
    bottom: 30px;
    z-index: 99;
    padding: 5px;
    background-color: @toolTipBackgroundColor;
    color: @toolTipTextColor;
    border: solid 1px @toolTipBorderColor;
    content: attr(tool-tip);
}

/** Blades **/
.container.blade-container {
    background-color: @colorBlue; /* TODO: use in 'desktop' div */
    /* remove bootstrap gutters */
    padding-left: 0px;
    padding-right: 0px;
}

.row.blade-row {
    /* remove bootstrap gutters */
    margin-left: 0px;
    margin-right: 0px;

    &.ng-enter {
        .Transition;
        position: absolute;
        opacity: 0;
    }

    &.ng-enter.ng-enter-active {
        opacity: 1;
    }

    &.ng-leave {
        .Transition;
        opacity: 1;
    }

    &.ng-leave.ng-leave-active {
        opacity: 0;
    }
}

[class*='col-'].blade-col {
    /* remove bootstrap gutters */
    padding-left: 0;
    padding-right: 0;
}

.blade {
    height: @bladeHeight;
}

.blade-title-bar {
    height: @bladeTitleHeight;
    background-color: @bladeTitleBackgroundColor;
    color: @bladeTitleTextColor;
    border-right: @bladeBorderSize solid lighten(@bladeTitleBackgroundColor, 10%);
    padding-right: @bladePaddingSize;
    padding-left: @bladePaddingSize;
}

.blade-title-bar-item {
    height: @bladeTitleHeight;
    float: right;
    /* center vertically */
    top: 10%;
    position: relative;
    cursor: pointer;
}

.blade-header {
    height: @bladeHeaderHeight;
    background-color: lighten(@bladeTitleBackgroundColor, 10%);
    color: lighten( @bladeTitleTextColor, 10%);
    padding-left: @bladePaddingSize;
    padding-right: @bladePaddingSize;
    border-right: @bladeBorderSize solid lighten(@bladeTitleBackgroundColor, 20%);
    font-size: 200%;
}

.blade-body {
    height: @bladeHeight - @bladeTitleHeight - @bladeHeaderHeight;
    background-color: @bladeBodybackgroundColorLight;
    border-right: @bladeBorderSize solid darken(@bladeBodybackgroundColorLight, 10%);
    border-bottom: @bladeBorderSize solid darken(@bladeBodybackgroundColorLight, 10%);

    &.dark {
        background-color: @bladeBodybackgroundColorDark;
        border-right: @bladeBorderSize solid darken(@bladeBodybackgroundColorDark, 10%);
    }
}

/** Tiles **/
.row.blade-tile-row {
    /* remove bootstrap gutters */
    margin-left: -@tileGutterSize;
    margin-right: -@tileGutterSize;
    padding-left: @bladePaddingSize;
    padding-right: @bladePaddingSize;
    padding-top: @bladePaddingSize;
}

[class*='col-'].blade-tile-col {
    padding-left: @tileGutterSize / 2;
    padding-right: @tileGutterSize / 2;
}

/* General tiles */
.blade-tile {
    background-color: @bladeBodybackgroundColorLight;
    border-left: 1px solid darken(@bladeBodybackgroundColorLight, 20%);
}

/* Console tiles */
.console-tile {
    height: @consoleHeight;
}

.console-title-bar {
    height: @consoleTitleHeight;
    background-color: @consoleTitleBackgroundColor;
    color: @consoleTitleTextColor;
    border: 1px solid lighten(@consoleTitleBackgroundColor, 20%);
}

.console-title-bar-item {
    height: @consoleTitleHeight;
    padding-right:5px;
    float: right;
    top: 10%;
    position: relative;
    cursor: pointer;

    .selected-item {
        color: darken(@consoleTitleTextColor, 40%);
    }
}

.console-body {
    /* Clear title-bar-item floats */
    clear: right;
    height: @consoleHeight - @consoleTitleHeight;
    background-color: @consoleBodyBackgroundColor;
    color: @consoleBodyTextColor;
    border: 1px solid lighten(@consoleBodyBackgroundColor, 20%);
    font-size: .75em;
    overflow-y: scroll;
}

/* Grid tiles */
.grid-tile {
    background-color: @bladeBodybackgroundColorLight;
}

.row.grid-row {
    border-bottom: 1px solid @gridDividerColor;
    /* remove bootstrap gutters */
    margin-left: 0px;
    margin-right: 0px;

    &:first-of-type {
        font-weight: bold;
    }

    &:not(:first-of-type):hover {
        background-color: @gridSelectedColor;
        cursor: pointer;
    }
}

.row.grid-row.selected-row {
    background-color: @gridSelectedColor;
}

[class*='col-'].grid-col {
    /* remove bootstrap gutters */
    padding-left: 0;
    padding-right: 0;
}
